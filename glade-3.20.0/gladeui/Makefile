# Makefile.in generated by automake 1.15 from Makefile.am.
# gladeui/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# In this file you will find generic and usefull rules to

# GResource rules:
# These rules will create source and header files for any file ending with .gresource.xml
# You will have to manually load the resourse unless the file name ends with
# .static.gresource.xml in which case it will be loaded automatically





am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/glade
pkgincludedir = $(includedir)/glade
pkglibdir = $(libdir)/glade
pkglibexecdir = $(libexecdir)/glade
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
target_triplet = x86_64-pc-linux-gnu
bin_PROGRAMS = glade-previewer$(EXEEXT)
#am__append_1 = glade-win32-res.o
#am__append_2 = -mwindows
#am__append_3 = -no-undefined

# gmodule-export-2.0 on windows does not include -export-dynamic flag
#am__append_4 = \
#	-Wl,gladeui-win32-res.o \
#	-export-dynamic

libgladeui_2_la_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__append_5 = Gladeui-2.0.gir
am__append_6 = $(gir_DATA) $(typelib_DATA)
subdir = gladeui
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/gtk-doc.m4 \
	$(top_srcdir)/m4/intltool.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/python.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(libgladeuiinclude_HEADERS) \
	$(noinst_HEADERS) $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = gladeui.rc glade-previewer.rc
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(girdir)" "$(DESTDIR)$(typelibdir)" \
	"$(DESTDIR)$(libgladeuiincludedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
am__objects_1 = libgladeui_2_la-glade-marshallers.lo \
	libgladeui_2_la-gladeui-resources.lo \
	libgladeui_2_la-gladeui-enum-types.lo
am_libgladeui_2_la_OBJECTS = $(am__objects_1) \
	libgladeui_2_la-glade-accumulators.lo \
	libgladeui_2_la-glade-app.lo \
	libgladeui_2_la-glade-base-editor.lo \
	libgladeui_2_la-glade-adaptor-chooser.lo \
	libgladeui_2_la-glade-builtins.lo \
	libgladeui_2_la-glade-catalog.lo \
	libgladeui_2_la-glade-cell-renderer-icon.lo \
	libgladeui_2_la-glade-clipboard.lo \
	libgladeui_2_la-glade-command.lo \
	libgladeui_2_la-glade-cursor.lo libgladeui_2_la-glade-debug.lo \
	libgladeui_2_la-glade-design-layout.lo \
	libgladeui_2_la-glade-design-view.lo \
	libgladeui_2_la-glade-displayable-values.lo \
	libgladeui_2_la-glade-editable.lo \
	libgladeui_2_la-glade-editor.lo \
	libgladeui_2_la-glade-editor-property.lo \
	libgladeui_2_la-glade-editor-skeleton.lo \
	libgladeui_2_la-glade-editor-table.lo \
	libgladeui_2_la-glade-id-allocator.lo \
	libgladeui_2_la-glade-object-stub.lo \
	libgladeui_2_la-glade-inspector.lo \
	libgladeui_2_la-glade-name-context.lo \
	libgladeui_2_la-glade-named-icon-chooser-dialog.lo \
	libgladeui_2_la-glade-palette.lo \
	libgladeui_2_la-glade-placeholder.lo \
	libgladeui_2_la-glade-popup.lo \
	libgladeui_2_la-glade-preview.lo \
	libgladeui_2_la-glade-project.lo \
	libgladeui_2_la-glade-project-properties.lo \
	libgladeui_2_la-glade-property.lo \
	libgladeui_2_la-glade-property-class.lo \
	libgladeui_2_la-glade-property-label.lo \
	libgladeui_2_la-glade-property-shell.lo \
	libgladeui_2_la-glade-signal.lo \
	libgladeui_2_la-glade-signal-class.lo \
	libgladeui_2_la-glade-signal-editor.lo \
	libgladeui_2_la-glade-signal-model.lo \
	libgladeui_2_la-glade-tsort.lo libgladeui_2_la-glade-utils.lo \
	libgladeui_2_la-glade-widget.lo \
	libgladeui_2_la-glade-widget-action.lo \
	libgladeui_2_la-glade-widget-adaptor.lo \
	libgladeui_2_la-glade-xml-utils.lo \
	libgladeui_2_la-glade-drag.lo libgladeui_2_la-glade-dnd.lo
libgladeui_2_la_OBJECTS = $(am_libgladeui_2_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libgladeui_2_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libgladeui_2_la_CFLAGS) $(CFLAGS) $(libgladeui_2_la_LDFLAGS) \
	$(LDFLAGS) -o $@
PROGRAMS = $(bin_PROGRAMS)
am_glade_previewer_OBJECTS =  \
	glade_previewer-glade-previewer.$(OBJEXT) \
	glade_previewer-glade-preview-window.$(OBJEXT) \
	glade_previewer-glade-preview-template.$(OBJEXT)
glade_previewer_OBJECTS = $(am_glade_previewer_OBJECTS)
glade_previewer_DEPENDENCIES = libgladeui-2.la $(am__DEPENDENCIES_1) \
	$(am__append_1)
glade_previewer_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(glade_previewer_CFLAGS) $(CFLAGS) $(glade_previewer_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libgladeui_2_la_SOURCES) $(glade_previewer_SOURCES)
DIST_SOURCES = $(libgladeui_2_la_SOURCES) $(glade_previewer_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(gir_DATA) $(typelib_DATA)
HEADERS = $(libgladeuiinclude_HEADERS) $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(srcdir)/glade-previewer.rc.in $(srcdir)/gladeui.rc.in \
	$(top_srcdir)/depcomp $(top_srcdir)/glade-rules.mk
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/mariana/Documentos/CG/glade-3.20.0/missing aclocal-1.15
ALL_LINGUAS = 
AMTAR = $${TAR-tar}
AM_CFLAGS = 
AM_CPPFLAGS = 
AM_CXXFLAGS = 
AM_DEFAULT_VERBOSITY = 0
AM_LDFLAGS = 
AR = ar
AS = as
AUTOCONF = ${SHELL} /home/mariana/Documentos/CG/glade-3.20.0/missing autoconf
AUTOHEADER = ${SHELL} /home/mariana/Documentos/CG/glade-3.20.0/missing autoheader
AUTOMAKE = ${SHELL} /home/mariana/Documentos/CG/glade-3.20.0/missing automake-1.15
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DATADIRNAME = share
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DISABLE_DEPRECATED =  -DGCONF_DISABLE_DEPRECATED -DGCONF_DISABLE_SINGLE_INCLUDES -DBONOBO_DISABLE_DEPRECATED -DBONOBO_DISABLE_SINGLE_INCLUDES -DBONOBO_UI_DISABLE_DEPRECATED -DBONOBO_UI_DISABLE_SINGLE_INCLUDES -DGNOME_DISABLE_DEPRECATED -DGNOME_DISABLE_SINGLE_INCLUDES -DLIBGLADE_DISABLE_DEPRECATED -DLIBGLADE_DISABLE_SINGLE_INCLUDES -DGNOME_VFS_DISABLE_DEPRECATED -DGNOME_VFS_DISABLE_SINGLE_INCLUDES -DWNCK_DISABLE_DEPRECATED -DWNCK_DISABLE_SINGLE_INCLUDES -DLIBSOUP_DISABLE_DEPRECATED -DLIBSOUP_DISABLE_SINGLE_INCLUDES
DLLTOOL = 
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GETTEXT_PACKAGE = glade
GLADE_AGE = 3
GLADE_CURRENT = 9
GLADE_CURRENT_MINUS_AGE = 6
GLADE_DEBUG_FLAGS = 
GLADE_MAJOR_VERSION = 3
GLADE_MICRO_VERSION = 0
GLADE_MINOR_VERSION = 20
GLADE_REVISION = 0
GLADE_TEST_ENVIRONMENT = GLADE_TESTING=1 GLADE_CATALOG_SEARCH_PATH=$(top_srcdir)/plugins/gtk+ GLADE_MODULE_SEARCH_PATH=$(top_builddir)/plugins/gtk+/.libs
GLADE_UNSTABLE = no
GLIB_COMPILE_RESOURCES = /usr/local/bin/glib-compile-resources
GLIB_GENMARSHAL = /usr/local/bin/glib-genmarshal
GLIB_MKENUMS = /usr/local/bin/glib-mkenums
GMODULE_EXPORT_CFLAGS = -pthread -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include  
GMODULE_EXPORT_LIBS = -Wl,--export-dynamic -pthread -L/usr/local/lib -lgmodule-2.0 -lglib-2.0  
GMSGFMT = /usr/bin/msgfmt
GREP = /bin/grep
GTKDOC_CHECK = gtkdoc-check.test
GTKDOC_CHECK_PATH = /usr/bin/gtkdoc-check
GTKDOC_DEPS_CFLAGS = -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include  
GTKDOC_DEPS_LIBS = -L/usr/local/lib -lgobject-2.0 -lglib-2.0  
GTKDOC_MKPDF = /usr/bin/gtkdoc-mkpdf
GTKDOC_REBASE = /usr/bin/gtkdoc-rebase
GTK_CFLAGS = -pthread -I/usr/local/include/gtk-3.0 -I/usr/local/include/atk-1.0 -I/usr/local/include/pango-1.0 -I/usr/local/include/gio-unix-2.0/ -I/usr/local/include/cairo -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/include/at-spi2-atk/2.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/harfbuzz -I/usr/include/freetype2 -I/usr/include/pixman-1 -I/usr/include/libpng12 -I/usr/include/libxml2  
GTK_LIBS = -Wl,--export-dynamic -pthread -L/usr/local/lib -lgtk-3 -lgdk-3 -latk-1.0 -lgio-2.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo-gobject -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -lglib-2.0 -lxml2  
GTK_MAC_BUNDLE_FLAG = 
GTK_MAC_CFLAGS = 
GTK_MAC_LIBS = 
HELP_DIR = ${datadir}/help
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLTOOL_EXTRACT = /usr/bin/intltool-extract
INTLTOOL_MERGE = /usr/bin/intltool-merge
INTLTOOL_PERL = /usr/bin/perl
INTLTOOL_UPDATE = /usr/bin/intltool-update
INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))
INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))
INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))
INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;
INTROSPECTION_CFLAGS = -pthread -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/include/gobject-introspection-1.0  
INTROSPECTION_COMPILER = /usr/bin/g-ir-compiler
INTROSPECTION_GENERATE = /usr/bin/g-ir-generate
INTROSPECTION_GIRDIR = /usr/share/gir-1.0
INTROSPECTION_LIBS = -L/usr/local/lib -lgirepository-1.0 -lgobject-2.0 -lglib-2.0  
INTROSPECTION_MAKEFILE = /usr/share/gobject-introspection-1.0/Makefile.introspection
INTROSPECTION_SCANNER = /usr/bin/g-ir-scanner
INTROSPECTION_TYPELIBDIR = /usr/lib/girepository-1.0
ITSTOOL = itstool
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBM = -lm
LIBOBJS = 
LIBS = -Wl,--export-dynamic -pthread -L/usr/local/lib -lgtk-3 -lgdk-3 -latk-1.0 -lgio-2.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo-gobject -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -lglib-2.0 -lxml2  
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAINT = 
MAKEINFO = ${SHELL} /home/mariana/Documentos/CG/glade-3.20.0/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MSGFMT = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = glade
PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=glade
PACKAGE_NAME = glade
PACKAGE_STRING = glade 3.20.0
PACKAGE_TARNAME = glade
PACKAGE_URL = http://glade.gnome.org/
PACKAGE_VERSION = 3.20.0
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = /usr/local/lib/pkgconfig
PLUGINS_WARN_CFLAGS = -Wall -Wnested-externs -Wpointer-arith
PYGOBJECT_CFLAGS = -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/include/pygobject-3.0  
PYGOBJECT_LIBS = -L/usr/local/lib -lgobject-2.0 -lglib-2.0  
PYTHON = /usr/bin/python
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_INCLUDES = -I/usr/include -I/usr/include -I/usr/include/python2.7 -I/usr/include/python2.7
PYTHON_LIBS = -L/usr/lib -L. -lpython2.7
PYTHON_LIB_LOC = /usr/lib
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.7
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
USE_NLS = yes
VERSION = 3.20.0
WARN_CFLAGS =  -Wall -Wstrict-prototypes -Wnested-externs -Werror=missing-prototypes -Werror=implicit-function-declaration -Werror=pointer-arith -Werror=init-self -Werror=format-security -Werror=format=2 -Werror=missing-include-dirs 
WINDRES = 
XGETTEXT = /usr/bin/xgettext
XMLLINT = xmllint
XSLTPROC = /usr/bin/xsltproc
YELP_LC_DIST = true
YELP_LC_MEDIA_LINKS = true
abs_builddir = /home/mariana/Documentos/CG/glade-3.20.0/gladeui
abs_srcdir = /home/mariana/Documentos/CG/glade-3.20.0/gladeui
abs_top_builddir = /home/mariana/Documentos/CG/glade-3.20.0
abs_top_srcdir = /home/mariana/Documentos/CG/glade-3.20.0
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/mariana/Documentos/CG/glade-3.20.0/install-sh
intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))
intltool__v_merge_options_0 = -q
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/glade
pkgpythondir = ${pythondir}/glade
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python2.7/dist-packages
pythondir = ${prefix}/lib/python2.7/dist-packages
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-pc-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = pc
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
lib_LTLIBRARIES = libgladeui-2.la
glade_previewer_CPPFLAGS = \
	-I$(top_srcdir)    \
	-I$(top_builddir)  \
	-DGLADE_GNOMEHELPDIR="\"$(HELP_DIR)\"" \
	$(GTK_CFLAGS)      \
	$(GTK_MAC_CFLAGS)  \
	$(WARN_CFLAGS)     \
	$(GLADE_DEBUG_FLAGS) \
	$(AM_CPPFLAGS)

glade_previewer_CFLAGS = \
	$(AM_CFLAGS)

glade_previewer_LDFLAGS = $(AM_LDFLAGS) $(am__append_2)
glade_previewer_LDADD = libgladeui-2.la $(GTK_MAC_LIBS) \
	$(am__append_1)
glade_previewer_SOURCES = \
	glade-previewer.c \
	glade-preview-window.c \
	glade-preview-template.c

common_defines = \
	-DG_LOG_DOMAIN=\"GladeUI\"                      \
	-DGLADE_CATALOGSDIR="\"$(pkgdatadir)/catalogs\""\
	-DGLADE_MODULESDIR="\"$(pkglibdir)/modules\""	\
	-DGLADE_PIXMAPSDIR="\"$(pkgdatadir)/pixmaps\""	\
	-DGLADE_LOCALEDIR="\"$(datadir)/locale\""\
	-DGLADE_BINDIR="\"$(bindir)\""\
	-DGLADE_LIBDIR="\"$(libdir)\""

BUILT_SOURCES = \
	glade-marshallers.c \
	glade-marshallers.h \
	gladeui-resources.c \
	gladeui-resources.h \
	gladeui-enum-types.c \
	gladeui-enum-types.h

UI_FILES = \
	glade-design-layout.css		\
	glade-editor.ui			\
	glade-project-properties.ui	\
	glade-adaptor-chooser.ui	\
	glade-property-label.ui

GRAPHICS_FILES = \
	atk.png

EXTRA_DIST = \
	$(UI_FILES)		\
	$(GRAPHICS_FILES)	\
	glade-marshallers.list 	\
	gladeui.rc.in 		\
	icon-naming-spec.c 	\
	glade-previewer.rc.in 	\
	gladeui-resources.gresource.xml \
	gladeui-enum-types.c.template	\
	gladeui-enum-types.h.template


# The glade core library
libgladeui_2_la_SOURCES = \
	$(BUILT_SOURCES)	\
	glade-accumulators.c \
	glade-app.c \
	glade-base-editor.c \
	glade-adaptor-chooser.c \
	glade-builtins.c \
	glade-catalog.c \
	glade-cell-renderer-icon.c \
	glade-clipboard.c \
	glade-command.c \
	glade-cursor.c \
	glade-debug.c \
	glade-design-layout.c \
	glade-design-view.c \
	glade-displayable-values.c \
	glade-editable.c \
	glade-editor.c \
	glade-editor-property.c \
	glade-editor-skeleton.c \
	glade-editor-table.c \
	glade-id-allocator.c \
	glade-id-allocator.h \
	glade-object-stub.c \
	glade-inspector.c \
	glade-name-context.c \
	glade-named-icon-chooser-dialog.c \
	glade-named-icon-chooser-dialog.h \
	glade-palette.c \
	glade-placeholder.c \
	glade-popup.c \
	glade-preview.c	\
	glade-project.c \
	glade-project-properties.c \
	glade-property.c \
	glade-property-class.c \
	glade-property-label.c \
	glade-property-shell.c \
	glade-signal.c \
	glade-signal-class.c \
	glade-signal-editor.c \
	glade-signal-model.c \
	glade-tsort.c \
	glade-utils.c \
	glade-widget.c \
	glade-widget-action.c \
	glade-widget-adaptor.c \
	glade-xml-utils.c \
	glade-drag.c \
	glade-dnd.c

libgladeui_2_la_CPPFLAGS = \
	$(common_defines)   \
	-I$(top_srcdir)     \
	-I$(top_builddir)   \
	$(GTK_CFLAGS)       \
	$(GTK_MAC_BUNDLE_FLAG) \
	$(GTK_MAC_CFLAGS)  \
	$(WARN_CFLAGS)      \
	$(GLADE_DEBUG_FLAGS) \
	$(AM_CPPFLAGS)

libgladeui_2_la_CFLAGS = \
	$(AM_CFLAGS)

libgladeui_2_la_LDFLAGS = -version-info \
	$(GLADE_CURRENT):$(GLADE_REVISION):$(GLADE_AGE) $(AM_LDFLAGS) \
	$(am__append_3) $(am__append_4)
libgladeui_2_la_LIBADD = $(GTK_LIBS) $(GTK_MAC_LIBS) $(LIBM)
libgladeuiincludedir = $(includedir)/libgladeui-2.0/gladeui
libgladeuiinclude_HEADERS = \
	glade.h \
	glade-app.h \
	glade-base-editor.h \
	glade-builtins.h \
	glade-catalog.h \
	glade-cell-renderer-icon.h \
	glade-clipboard.h \
	glade-command.h \
	glade-cursor.h \
	glade-debug.h \
	glade-design-view.h \
	glade-displayable-values.h \
	glade-editable.h \
	glade-editor.h \
	glade-editor-property.h \
	glade-editor-skeleton.h \
	glade-editor-table.h \
	glade-inspector.h \
	glade-name-context.h \
	glade-palette.h \
	glade-placeholder.h \
	glade-project.h \
	glade-property.h \
	glade-property-class.h \
	glade-property-label.h \
	glade-property-shell.h \
	glade-signal.h \
	glade-signal-class.h \
	glade-signal-editor.h \
	glade-signal-model.h \
	glade-utils.h \
	glade-widget.h \
	glade-widget-action.h \
	glade-widget-adaptor.h \
	glade-xml-utils.h

noinst_HEADERS = \
	glade-accumulators.h \
	glade-adaptor-chooser.h \
	glade-design-layout.h \
	glade-design-private.h \
	glade-marshallers.h \
	glade-object-stub.h \
	glade-path.h \
	glade-popup.h \
	glade-preview.h \
	glade-preview-tokens.h \
	glade-preview-window.h \
	glade-preview-template.h \
	glade-private.h \
	glade-project-properties.h \
	glade-tsort.h \
	gladeui-resources.h \
	glade-drag.h \
	glade-dnd.h

#libgladeui_2_la_DEPENDENCIES = gladeui-win32-res.o
CLEANFILES = $(BUILT_SOURCES) $(am__append_6)
INTROSPECTION_GIRS = $(am__append_5)
INTROSPECTION_SCANNER_ARGS = \
	--add-include-path=$(srcdir) \
	--identifier-prefix=Glade \
	--symbol-prefix=glade \
	--pkg=gtk+-3.0 -I../ -I$(srcdir)/..

INTROSPECTION_COMPILER_ARGS = --includedir=$(srcdir)
introspection_sources = $(libgladeui_2_la_SOURCES) $(libgladeuiinclude_HEADERS)
Gladeui_2_0_gir_INCLUDES = Gtk-3.0
Gladeui_2_0_gir_CFLAGS = $(INCLUDES)
Gladeui_2_0_gir_LIBS = libgladeui-2.la
Gladeui_2_0_gir_FILES = $(introspection_sources)
girdir = $(datadir)/gir-1.0
gir_DATA = $(INTROSPECTION_GIRS)
typelibdir = $(libdir)/girepository-1.0
typelib_DATA = $(INTROSPECTION_GIRS:.gir=.typelib)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/glade-rules.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign gladeui/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign gladeui/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/glade-rules.mk $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
gladeui.rc: $(top_builddir)/config.status $(srcdir)/gladeui.rc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
glade-previewer.rc: $(top_builddir)/config.status $(srcdir)/glade-previewer.rc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libgladeui-2.la: $(libgladeui_2_la_OBJECTS) $(libgladeui_2_la_DEPENDENCIES) $(EXTRA_libgladeui_2_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libgladeui_2_la_LINK) -rpath $(libdir) $(libgladeui_2_la_OBJECTS) $(libgladeui_2_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

glade-previewer$(EXEEXT): $(glade_previewer_OBJECTS) $(glade_previewer_DEPENDENCIES) $(EXTRA_glade_previewer_DEPENDENCIES) 
	@rm -f glade-previewer$(EXEEXT)
	$(AM_V_CCLD)$(glade_previewer_LINK) $(glade_previewer_OBJECTS) $(glade_previewer_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/glade_previewer-glade-preview-template.Po
include ./$(DEPDIR)/glade_previewer-glade-preview-window.Po
include ./$(DEPDIR)/glade_previewer-glade-previewer.Po
include ./$(DEPDIR)/libgladeui_2_la-glade-accumulators.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-adaptor-chooser.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-app.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-base-editor.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-builtins.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-catalog.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-cell-renderer-icon.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-clipboard.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-command.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-cursor.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-debug.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-design-layout.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-design-view.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-displayable-values.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-dnd.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-drag.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-editable.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-editor-property.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-editor-skeleton.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-editor-table.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-editor.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-id-allocator.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-inspector.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-marshallers.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-name-context.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-named-icon-chooser-dialog.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-object-stub.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-palette.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-placeholder.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-popup.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-preview.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-project-properties.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-project.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-property-class.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-property-label.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-property-shell.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-property.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-signal-class.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-signal-editor.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-signal-model.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-signal.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-tsort.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-utils.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-widget-action.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-widget-adaptor.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-widget.Plo
include ./$(DEPDIR)/libgladeui_2_la-glade-xml-utils.Plo
include ./$(DEPDIR)/libgladeui_2_la-gladeui-enum-types.Plo
include ./$(DEPDIR)/libgladeui_2_la-gladeui-resources.Plo

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

libgladeui_2_la-glade-marshallers.lo: glade-marshallers.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-marshallers.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-marshallers.Tpo -c -o libgladeui_2_la-glade-marshallers.lo `test -f 'glade-marshallers.c' || echo '$(srcdir)/'`glade-marshallers.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-marshallers.Tpo $(DEPDIR)/libgladeui_2_la-glade-marshallers.Plo
#	$(AM_V_CC)source='glade-marshallers.c' object='libgladeui_2_la-glade-marshallers.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-marshallers.lo `test -f 'glade-marshallers.c' || echo '$(srcdir)/'`glade-marshallers.c

libgladeui_2_la-gladeui-resources.lo: gladeui-resources.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-gladeui-resources.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-gladeui-resources.Tpo -c -o libgladeui_2_la-gladeui-resources.lo `test -f 'gladeui-resources.c' || echo '$(srcdir)/'`gladeui-resources.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-gladeui-resources.Tpo $(DEPDIR)/libgladeui_2_la-gladeui-resources.Plo
#	$(AM_V_CC)source='gladeui-resources.c' object='libgladeui_2_la-gladeui-resources.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-gladeui-resources.lo `test -f 'gladeui-resources.c' || echo '$(srcdir)/'`gladeui-resources.c

libgladeui_2_la-gladeui-enum-types.lo: gladeui-enum-types.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-gladeui-enum-types.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-gladeui-enum-types.Tpo -c -o libgladeui_2_la-gladeui-enum-types.lo `test -f 'gladeui-enum-types.c' || echo '$(srcdir)/'`gladeui-enum-types.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-gladeui-enum-types.Tpo $(DEPDIR)/libgladeui_2_la-gladeui-enum-types.Plo
#	$(AM_V_CC)source='gladeui-enum-types.c' object='libgladeui_2_la-gladeui-enum-types.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-gladeui-enum-types.lo `test -f 'gladeui-enum-types.c' || echo '$(srcdir)/'`gladeui-enum-types.c

libgladeui_2_la-glade-accumulators.lo: glade-accumulators.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-accumulators.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-accumulators.Tpo -c -o libgladeui_2_la-glade-accumulators.lo `test -f 'glade-accumulators.c' || echo '$(srcdir)/'`glade-accumulators.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-accumulators.Tpo $(DEPDIR)/libgladeui_2_la-glade-accumulators.Plo
#	$(AM_V_CC)source='glade-accumulators.c' object='libgladeui_2_la-glade-accumulators.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-accumulators.lo `test -f 'glade-accumulators.c' || echo '$(srcdir)/'`glade-accumulators.c

libgladeui_2_la-glade-app.lo: glade-app.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-app.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-app.Tpo -c -o libgladeui_2_la-glade-app.lo `test -f 'glade-app.c' || echo '$(srcdir)/'`glade-app.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-app.Tpo $(DEPDIR)/libgladeui_2_la-glade-app.Plo
#	$(AM_V_CC)source='glade-app.c' object='libgladeui_2_la-glade-app.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-app.lo `test -f 'glade-app.c' || echo '$(srcdir)/'`glade-app.c

libgladeui_2_la-glade-base-editor.lo: glade-base-editor.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-base-editor.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-base-editor.Tpo -c -o libgladeui_2_la-glade-base-editor.lo `test -f 'glade-base-editor.c' || echo '$(srcdir)/'`glade-base-editor.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-base-editor.Tpo $(DEPDIR)/libgladeui_2_la-glade-base-editor.Plo
#	$(AM_V_CC)source='glade-base-editor.c' object='libgladeui_2_la-glade-base-editor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-base-editor.lo `test -f 'glade-base-editor.c' || echo '$(srcdir)/'`glade-base-editor.c

libgladeui_2_la-glade-adaptor-chooser.lo: glade-adaptor-chooser.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-adaptor-chooser.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-adaptor-chooser.Tpo -c -o libgladeui_2_la-glade-adaptor-chooser.lo `test -f 'glade-adaptor-chooser.c' || echo '$(srcdir)/'`glade-adaptor-chooser.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-adaptor-chooser.Tpo $(DEPDIR)/libgladeui_2_la-glade-adaptor-chooser.Plo
#	$(AM_V_CC)source='glade-adaptor-chooser.c' object='libgladeui_2_la-glade-adaptor-chooser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-adaptor-chooser.lo `test -f 'glade-adaptor-chooser.c' || echo '$(srcdir)/'`glade-adaptor-chooser.c

libgladeui_2_la-glade-builtins.lo: glade-builtins.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-builtins.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-builtins.Tpo -c -o libgladeui_2_la-glade-builtins.lo `test -f 'glade-builtins.c' || echo '$(srcdir)/'`glade-builtins.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-builtins.Tpo $(DEPDIR)/libgladeui_2_la-glade-builtins.Plo
#	$(AM_V_CC)source='glade-builtins.c' object='libgladeui_2_la-glade-builtins.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-builtins.lo `test -f 'glade-builtins.c' || echo '$(srcdir)/'`glade-builtins.c

libgladeui_2_la-glade-catalog.lo: glade-catalog.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-catalog.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-catalog.Tpo -c -o libgladeui_2_la-glade-catalog.lo `test -f 'glade-catalog.c' || echo '$(srcdir)/'`glade-catalog.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-catalog.Tpo $(DEPDIR)/libgladeui_2_la-glade-catalog.Plo
#	$(AM_V_CC)source='glade-catalog.c' object='libgladeui_2_la-glade-catalog.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-catalog.lo `test -f 'glade-catalog.c' || echo '$(srcdir)/'`glade-catalog.c

libgladeui_2_la-glade-cell-renderer-icon.lo: glade-cell-renderer-icon.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-cell-renderer-icon.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-cell-renderer-icon.Tpo -c -o libgladeui_2_la-glade-cell-renderer-icon.lo `test -f 'glade-cell-renderer-icon.c' || echo '$(srcdir)/'`glade-cell-renderer-icon.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-cell-renderer-icon.Tpo $(DEPDIR)/libgladeui_2_la-glade-cell-renderer-icon.Plo
#	$(AM_V_CC)source='glade-cell-renderer-icon.c' object='libgladeui_2_la-glade-cell-renderer-icon.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-cell-renderer-icon.lo `test -f 'glade-cell-renderer-icon.c' || echo '$(srcdir)/'`glade-cell-renderer-icon.c

libgladeui_2_la-glade-clipboard.lo: glade-clipboard.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-clipboard.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-clipboard.Tpo -c -o libgladeui_2_la-glade-clipboard.lo `test -f 'glade-clipboard.c' || echo '$(srcdir)/'`glade-clipboard.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-clipboard.Tpo $(DEPDIR)/libgladeui_2_la-glade-clipboard.Plo
#	$(AM_V_CC)source='glade-clipboard.c' object='libgladeui_2_la-glade-clipboard.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-clipboard.lo `test -f 'glade-clipboard.c' || echo '$(srcdir)/'`glade-clipboard.c

libgladeui_2_la-glade-command.lo: glade-command.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-command.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-command.Tpo -c -o libgladeui_2_la-glade-command.lo `test -f 'glade-command.c' || echo '$(srcdir)/'`glade-command.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-command.Tpo $(DEPDIR)/libgladeui_2_la-glade-command.Plo
#	$(AM_V_CC)source='glade-command.c' object='libgladeui_2_la-glade-command.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-command.lo `test -f 'glade-command.c' || echo '$(srcdir)/'`glade-command.c

libgladeui_2_la-glade-cursor.lo: glade-cursor.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-cursor.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-cursor.Tpo -c -o libgladeui_2_la-glade-cursor.lo `test -f 'glade-cursor.c' || echo '$(srcdir)/'`glade-cursor.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-cursor.Tpo $(DEPDIR)/libgladeui_2_la-glade-cursor.Plo
#	$(AM_V_CC)source='glade-cursor.c' object='libgladeui_2_la-glade-cursor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-cursor.lo `test -f 'glade-cursor.c' || echo '$(srcdir)/'`glade-cursor.c

libgladeui_2_la-glade-debug.lo: glade-debug.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-debug.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-debug.Tpo -c -o libgladeui_2_la-glade-debug.lo `test -f 'glade-debug.c' || echo '$(srcdir)/'`glade-debug.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-debug.Tpo $(DEPDIR)/libgladeui_2_la-glade-debug.Plo
#	$(AM_V_CC)source='glade-debug.c' object='libgladeui_2_la-glade-debug.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-debug.lo `test -f 'glade-debug.c' || echo '$(srcdir)/'`glade-debug.c

libgladeui_2_la-glade-design-layout.lo: glade-design-layout.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-design-layout.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-design-layout.Tpo -c -o libgladeui_2_la-glade-design-layout.lo `test -f 'glade-design-layout.c' || echo '$(srcdir)/'`glade-design-layout.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-design-layout.Tpo $(DEPDIR)/libgladeui_2_la-glade-design-layout.Plo
#	$(AM_V_CC)source='glade-design-layout.c' object='libgladeui_2_la-glade-design-layout.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-design-layout.lo `test -f 'glade-design-layout.c' || echo '$(srcdir)/'`glade-design-layout.c

libgladeui_2_la-glade-design-view.lo: glade-design-view.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-design-view.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-design-view.Tpo -c -o libgladeui_2_la-glade-design-view.lo `test -f 'glade-design-view.c' || echo '$(srcdir)/'`glade-design-view.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-design-view.Tpo $(DEPDIR)/libgladeui_2_la-glade-design-view.Plo
#	$(AM_V_CC)source='glade-design-view.c' object='libgladeui_2_la-glade-design-view.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-design-view.lo `test -f 'glade-design-view.c' || echo '$(srcdir)/'`glade-design-view.c

libgladeui_2_la-glade-displayable-values.lo: glade-displayable-values.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-displayable-values.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-displayable-values.Tpo -c -o libgladeui_2_la-glade-displayable-values.lo `test -f 'glade-displayable-values.c' || echo '$(srcdir)/'`glade-displayable-values.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-displayable-values.Tpo $(DEPDIR)/libgladeui_2_la-glade-displayable-values.Plo
#	$(AM_V_CC)source='glade-displayable-values.c' object='libgladeui_2_la-glade-displayable-values.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-displayable-values.lo `test -f 'glade-displayable-values.c' || echo '$(srcdir)/'`glade-displayable-values.c

libgladeui_2_la-glade-editable.lo: glade-editable.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-editable.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-editable.Tpo -c -o libgladeui_2_la-glade-editable.lo `test -f 'glade-editable.c' || echo '$(srcdir)/'`glade-editable.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-editable.Tpo $(DEPDIR)/libgladeui_2_la-glade-editable.Plo
#	$(AM_V_CC)source='glade-editable.c' object='libgladeui_2_la-glade-editable.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-editable.lo `test -f 'glade-editable.c' || echo '$(srcdir)/'`glade-editable.c

libgladeui_2_la-glade-editor.lo: glade-editor.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-editor.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-editor.Tpo -c -o libgladeui_2_la-glade-editor.lo `test -f 'glade-editor.c' || echo '$(srcdir)/'`glade-editor.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-editor.Tpo $(DEPDIR)/libgladeui_2_la-glade-editor.Plo
#	$(AM_V_CC)source='glade-editor.c' object='libgladeui_2_la-glade-editor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-editor.lo `test -f 'glade-editor.c' || echo '$(srcdir)/'`glade-editor.c

libgladeui_2_la-glade-editor-property.lo: glade-editor-property.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-editor-property.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-editor-property.Tpo -c -o libgladeui_2_la-glade-editor-property.lo `test -f 'glade-editor-property.c' || echo '$(srcdir)/'`glade-editor-property.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-editor-property.Tpo $(DEPDIR)/libgladeui_2_la-glade-editor-property.Plo
#	$(AM_V_CC)source='glade-editor-property.c' object='libgladeui_2_la-glade-editor-property.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-editor-property.lo `test -f 'glade-editor-property.c' || echo '$(srcdir)/'`glade-editor-property.c

libgladeui_2_la-glade-editor-skeleton.lo: glade-editor-skeleton.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-editor-skeleton.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-editor-skeleton.Tpo -c -o libgladeui_2_la-glade-editor-skeleton.lo `test -f 'glade-editor-skeleton.c' || echo '$(srcdir)/'`glade-editor-skeleton.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-editor-skeleton.Tpo $(DEPDIR)/libgladeui_2_la-glade-editor-skeleton.Plo
#	$(AM_V_CC)source='glade-editor-skeleton.c' object='libgladeui_2_la-glade-editor-skeleton.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-editor-skeleton.lo `test -f 'glade-editor-skeleton.c' || echo '$(srcdir)/'`glade-editor-skeleton.c

libgladeui_2_la-glade-editor-table.lo: glade-editor-table.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-editor-table.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-editor-table.Tpo -c -o libgladeui_2_la-glade-editor-table.lo `test -f 'glade-editor-table.c' || echo '$(srcdir)/'`glade-editor-table.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-editor-table.Tpo $(DEPDIR)/libgladeui_2_la-glade-editor-table.Plo
#	$(AM_V_CC)source='glade-editor-table.c' object='libgladeui_2_la-glade-editor-table.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-editor-table.lo `test -f 'glade-editor-table.c' || echo '$(srcdir)/'`glade-editor-table.c

libgladeui_2_la-glade-id-allocator.lo: glade-id-allocator.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-id-allocator.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-id-allocator.Tpo -c -o libgladeui_2_la-glade-id-allocator.lo `test -f 'glade-id-allocator.c' || echo '$(srcdir)/'`glade-id-allocator.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-id-allocator.Tpo $(DEPDIR)/libgladeui_2_la-glade-id-allocator.Plo
#	$(AM_V_CC)source='glade-id-allocator.c' object='libgladeui_2_la-glade-id-allocator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-id-allocator.lo `test -f 'glade-id-allocator.c' || echo '$(srcdir)/'`glade-id-allocator.c

libgladeui_2_la-glade-object-stub.lo: glade-object-stub.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-object-stub.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-object-stub.Tpo -c -o libgladeui_2_la-glade-object-stub.lo `test -f 'glade-object-stub.c' || echo '$(srcdir)/'`glade-object-stub.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-object-stub.Tpo $(DEPDIR)/libgladeui_2_la-glade-object-stub.Plo
#	$(AM_V_CC)source='glade-object-stub.c' object='libgladeui_2_la-glade-object-stub.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-object-stub.lo `test -f 'glade-object-stub.c' || echo '$(srcdir)/'`glade-object-stub.c

libgladeui_2_la-glade-inspector.lo: glade-inspector.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-inspector.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-inspector.Tpo -c -o libgladeui_2_la-glade-inspector.lo `test -f 'glade-inspector.c' || echo '$(srcdir)/'`glade-inspector.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-inspector.Tpo $(DEPDIR)/libgladeui_2_la-glade-inspector.Plo
#	$(AM_V_CC)source='glade-inspector.c' object='libgladeui_2_la-glade-inspector.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-inspector.lo `test -f 'glade-inspector.c' || echo '$(srcdir)/'`glade-inspector.c

libgladeui_2_la-glade-name-context.lo: glade-name-context.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-name-context.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-name-context.Tpo -c -o libgladeui_2_la-glade-name-context.lo `test -f 'glade-name-context.c' || echo '$(srcdir)/'`glade-name-context.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-name-context.Tpo $(DEPDIR)/libgladeui_2_la-glade-name-context.Plo
#	$(AM_V_CC)source='glade-name-context.c' object='libgladeui_2_la-glade-name-context.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-name-context.lo `test -f 'glade-name-context.c' || echo '$(srcdir)/'`glade-name-context.c

libgladeui_2_la-glade-named-icon-chooser-dialog.lo: glade-named-icon-chooser-dialog.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-named-icon-chooser-dialog.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-named-icon-chooser-dialog.Tpo -c -o libgladeui_2_la-glade-named-icon-chooser-dialog.lo `test -f 'glade-named-icon-chooser-dialog.c' || echo '$(srcdir)/'`glade-named-icon-chooser-dialog.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-named-icon-chooser-dialog.Tpo $(DEPDIR)/libgladeui_2_la-glade-named-icon-chooser-dialog.Plo
#	$(AM_V_CC)source='glade-named-icon-chooser-dialog.c' object='libgladeui_2_la-glade-named-icon-chooser-dialog.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-named-icon-chooser-dialog.lo `test -f 'glade-named-icon-chooser-dialog.c' || echo '$(srcdir)/'`glade-named-icon-chooser-dialog.c

libgladeui_2_la-glade-palette.lo: glade-palette.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-palette.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-palette.Tpo -c -o libgladeui_2_la-glade-palette.lo `test -f 'glade-palette.c' || echo '$(srcdir)/'`glade-palette.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-palette.Tpo $(DEPDIR)/libgladeui_2_la-glade-palette.Plo
#	$(AM_V_CC)source='glade-palette.c' object='libgladeui_2_la-glade-palette.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-palette.lo `test -f 'glade-palette.c' || echo '$(srcdir)/'`glade-palette.c

libgladeui_2_la-glade-placeholder.lo: glade-placeholder.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-placeholder.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-placeholder.Tpo -c -o libgladeui_2_la-glade-placeholder.lo `test -f 'glade-placeholder.c' || echo '$(srcdir)/'`glade-placeholder.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-placeholder.Tpo $(DEPDIR)/libgladeui_2_la-glade-placeholder.Plo
#	$(AM_V_CC)source='glade-placeholder.c' object='libgladeui_2_la-glade-placeholder.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-placeholder.lo `test -f 'glade-placeholder.c' || echo '$(srcdir)/'`glade-placeholder.c

libgladeui_2_la-glade-popup.lo: glade-popup.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-popup.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-popup.Tpo -c -o libgladeui_2_la-glade-popup.lo `test -f 'glade-popup.c' || echo '$(srcdir)/'`glade-popup.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-popup.Tpo $(DEPDIR)/libgladeui_2_la-glade-popup.Plo
#	$(AM_V_CC)source='glade-popup.c' object='libgladeui_2_la-glade-popup.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-popup.lo `test -f 'glade-popup.c' || echo '$(srcdir)/'`glade-popup.c

libgladeui_2_la-glade-preview.lo: glade-preview.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-preview.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-preview.Tpo -c -o libgladeui_2_la-glade-preview.lo `test -f 'glade-preview.c' || echo '$(srcdir)/'`glade-preview.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-preview.Tpo $(DEPDIR)/libgladeui_2_la-glade-preview.Plo
#	$(AM_V_CC)source='glade-preview.c' object='libgladeui_2_la-glade-preview.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-preview.lo `test -f 'glade-preview.c' || echo '$(srcdir)/'`glade-preview.c

libgladeui_2_la-glade-project.lo: glade-project.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-project.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-project.Tpo -c -o libgladeui_2_la-glade-project.lo `test -f 'glade-project.c' || echo '$(srcdir)/'`glade-project.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-project.Tpo $(DEPDIR)/libgladeui_2_la-glade-project.Plo
#	$(AM_V_CC)source='glade-project.c' object='libgladeui_2_la-glade-project.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-project.lo `test -f 'glade-project.c' || echo '$(srcdir)/'`glade-project.c

libgladeui_2_la-glade-project-properties.lo: glade-project-properties.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-project-properties.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-project-properties.Tpo -c -o libgladeui_2_la-glade-project-properties.lo `test -f 'glade-project-properties.c' || echo '$(srcdir)/'`glade-project-properties.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-project-properties.Tpo $(DEPDIR)/libgladeui_2_la-glade-project-properties.Plo
#	$(AM_V_CC)source='glade-project-properties.c' object='libgladeui_2_la-glade-project-properties.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-project-properties.lo `test -f 'glade-project-properties.c' || echo '$(srcdir)/'`glade-project-properties.c

libgladeui_2_la-glade-property.lo: glade-property.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-property.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-property.Tpo -c -o libgladeui_2_la-glade-property.lo `test -f 'glade-property.c' || echo '$(srcdir)/'`glade-property.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-property.Tpo $(DEPDIR)/libgladeui_2_la-glade-property.Plo
#	$(AM_V_CC)source='glade-property.c' object='libgladeui_2_la-glade-property.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-property.lo `test -f 'glade-property.c' || echo '$(srcdir)/'`glade-property.c

libgladeui_2_la-glade-property-class.lo: glade-property-class.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-property-class.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-property-class.Tpo -c -o libgladeui_2_la-glade-property-class.lo `test -f 'glade-property-class.c' || echo '$(srcdir)/'`glade-property-class.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-property-class.Tpo $(DEPDIR)/libgladeui_2_la-glade-property-class.Plo
#	$(AM_V_CC)source='glade-property-class.c' object='libgladeui_2_la-glade-property-class.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-property-class.lo `test -f 'glade-property-class.c' || echo '$(srcdir)/'`glade-property-class.c

libgladeui_2_la-glade-property-label.lo: glade-property-label.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-property-label.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-property-label.Tpo -c -o libgladeui_2_la-glade-property-label.lo `test -f 'glade-property-label.c' || echo '$(srcdir)/'`glade-property-label.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-property-label.Tpo $(DEPDIR)/libgladeui_2_la-glade-property-label.Plo
#	$(AM_V_CC)source='glade-property-label.c' object='libgladeui_2_la-glade-property-label.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-property-label.lo `test -f 'glade-property-label.c' || echo '$(srcdir)/'`glade-property-label.c

libgladeui_2_la-glade-property-shell.lo: glade-property-shell.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-property-shell.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-property-shell.Tpo -c -o libgladeui_2_la-glade-property-shell.lo `test -f 'glade-property-shell.c' || echo '$(srcdir)/'`glade-property-shell.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-property-shell.Tpo $(DEPDIR)/libgladeui_2_la-glade-property-shell.Plo
#	$(AM_V_CC)source='glade-property-shell.c' object='libgladeui_2_la-glade-property-shell.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-property-shell.lo `test -f 'glade-property-shell.c' || echo '$(srcdir)/'`glade-property-shell.c

libgladeui_2_la-glade-signal.lo: glade-signal.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-signal.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-signal.Tpo -c -o libgladeui_2_la-glade-signal.lo `test -f 'glade-signal.c' || echo '$(srcdir)/'`glade-signal.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-signal.Tpo $(DEPDIR)/libgladeui_2_la-glade-signal.Plo
#	$(AM_V_CC)source='glade-signal.c' object='libgladeui_2_la-glade-signal.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-signal.lo `test -f 'glade-signal.c' || echo '$(srcdir)/'`glade-signal.c

libgladeui_2_la-glade-signal-class.lo: glade-signal-class.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-signal-class.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-signal-class.Tpo -c -o libgladeui_2_la-glade-signal-class.lo `test -f 'glade-signal-class.c' || echo '$(srcdir)/'`glade-signal-class.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-signal-class.Tpo $(DEPDIR)/libgladeui_2_la-glade-signal-class.Plo
#	$(AM_V_CC)source='glade-signal-class.c' object='libgladeui_2_la-glade-signal-class.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-signal-class.lo `test -f 'glade-signal-class.c' || echo '$(srcdir)/'`glade-signal-class.c

libgladeui_2_la-glade-signal-editor.lo: glade-signal-editor.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-signal-editor.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-signal-editor.Tpo -c -o libgladeui_2_la-glade-signal-editor.lo `test -f 'glade-signal-editor.c' || echo '$(srcdir)/'`glade-signal-editor.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-signal-editor.Tpo $(DEPDIR)/libgladeui_2_la-glade-signal-editor.Plo
#	$(AM_V_CC)source='glade-signal-editor.c' object='libgladeui_2_la-glade-signal-editor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-signal-editor.lo `test -f 'glade-signal-editor.c' || echo '$(srcdir)/'`glade-signal-editor.c

libgladeui_2_la-glade-signal-model.lo: glade-signal-model.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-signal-model.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-signal-model.Tpo -c -o libgladeui_2_la-glade-signal-model.lo `test -f 'glade-signal-model.c' || echo '$(srcdir)/'`glade-signal-model.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-signal-model.Tpo $(DEPDIR)/libgladeui_2_la-glade-signal-model.Plo
#	$(AM_V_CC)source='glade-signal-model.c' object='libgladeui_2_la-glade-signal-model.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-signal-model.lo `test -f 'glade-signal-model.c' || echo '$(srcdir)/'`glade-signal-model.c

libgladeui_2_la-glade-tsort.lo: glade-tsort.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-tsort.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-tsort.Tpo -c -o libgladeui_2_la-glade-tsort.lo `test -f 'glade-tsort.c' || echo '$(srcdir)/'`glade-tsort.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-tsort.Tpo $(DEPDIR)/libgladeui_2_la-glade-tsort.Plo
#	$(AM_V_CC)source='glade-tsort.c' object='libgladeui_2_la-glade-tsort.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-tsort.lo `test -f 'glade-tsort.c' || echo '$(srcdir)/'`glade-tsort.c

libgladeui_2_la-glade-utils.lo: glade-utils.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-utils.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-utils.Tpo -c -o libgladeui_2_la-glade-utils.lo `test -f 'glade-utils.c' || echo '$(srcdir)/'`glade-utils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-utils.Tpo $(DEPDIR)/libgladeui_2_la-glade-utils.Plo
#	$(AM_V_CC)source='glade-utils.c' object='libgladeui_2_la-glade-utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-utils.lo `test -f 'glade-utils.c' || echo '$(srcdir)/'`glade-utils.c

libgladeui_2_la-glade-widget.lo: glade-widget.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-widget.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-widget.Tpo -c -o libgladeui_2_la-glade-widget.lo `test -f 'glade-widget.c' || echo '$(srcdir)/'`glade-widget.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-widget.Tpo $(DEPDIR)/libgladeui_2_la-glade-widget.Plo
#	$(AM_V_CC)source='glade-widget.c' object='libgladeui_2_la-glade-widget.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-widget.lo `test -f 'glade-widget.c' || echo '$(srcdir)/'`glade-widget.c

libgladeui_2_la-glade-widget-action.lo: glade-widget-action.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-widget-action.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-widget-action.Tpo -c -o libgladeui_2_la-glade-widget-action.lo `test -f 'glade-widget-action.c' || echo '$(srcdir)/'`glade-widget-action.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-widget-action.Tpo $(DEPDIR)/libgladeui_2_la-glade-widget-action.Plo
#	$(AM_V_CC)source='glade-widget-action.c' object='libgladeui_2_la-glade-widget-action.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-widget-action.lo `test -f 'glade-widget-action.c' || echo '$(srcdir)/'`glade-widget-action.c

libgladeui_2_la-glade-widget-adaptor.lo: glade-widget-adaptor.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-widget-adaptor.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-widget-adaptor.Tpo -c -o libgladeui_2_la-glade-widget-adaptor.lo `test -f 'glade-widget-adaptor.c' || echo '$(srcdir)/'`glade-widget-adaptor.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-widget-adaptor.Tpo $(DEPDIR)/libgladeui_2_la-glade-widget-adaptor.Plo
#	$(AM_V_CC)source='glade-widget-adaptor.c' object='libgladeui_2_la-glade-widget-adaptor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-widget-adaptor.lo `test -f 'glade-widget-adaptor.c' || echo '$(srcdir)/'`glade-widget-adaptor.c

libgladeui_2_la-glade-xml-utils.lo: glade-xml-utils.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-xml-utils.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-xml-utils.Tpo -c -o libgladeui_2_la-glade-xml-utils.lo `test -f 'glade-xml-utils.c' || echo '$(srcdir)/'`glade-xml-utils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-xml-utils.Tpo $(DEPDIR)/libgladeui_2_la-glade-xml-utils.Plo
#	$(AM_V_CC)source='glade-xml-utils.c' object='libgladeui_2_la-glade-xml-utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-xml-utils.lo `test -f 'glade-xml-utils.c' || echo '$(srcdir)/'`glade-xml-utils.c

libgladeui_2_la-glade-drag.lo: glade-drag.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-drag.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-drag.Tpo -c -o libgladeui_2_la-glade-drag.lo `test -f 'glade-drag.c' || echo '$(srcdir)/'`glade-drag.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-drag.Tpo $(DEPDIR)/libgladeui_2_la-glade-drag.Plo
#	$(AM_V_CC)source='glade-drag.c' object='libgladeui_2_la-glade-drag.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-drag.lo `test -f 'glade-drag.c' || echo '$(srcdir)/'`glade-drag.c

libgladeui_2_la-glade-dnd.lo: glade-dnd.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -MT libgladeui_2_la-glade-dnd.lo -MD -MP -MF $(DEPDIR)/libgladeui_2_la-glade-dnd.Tpo -c -o libgladeui_2_la-glade-dnd.lo `test -f 'glade-dnd.c' || echo '$(srcdir)/'`glade-dnd.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgladeui_2_la-glade-dnd.Tpo $(DEPDIR)/libgladeui_2_la-glade-dnd.Plo
#	$(AM_V_CC)source='glade-dnd.c' object='libgladeui_2_la-glade-dnd.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgladeui_2_la_CPPFLAGS) $(CPPFLAGS) $(libgladeui_2_la_CFLAGS) $(CFLAGS) -c -o libgladeui_2_la-glade-dnd.lo `test -f 'glade-dnd.c' || echo '$(srcdir)/'`glade-dnd.c

glade_previewer-glade-previewer.o: glade-previewer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(glade_previewer_CPPFLAGS) $(CPPFLAGS) $(glade_previewer_CFLAGS) $(CFLAGS) -MT glade_previewer-glade-previewer.o -MD -MP -MF $(DEPDIR)/glade_previewer-glade-previewer.Tpo -c -o glade_previewer-glade-previewer.o `test -f 'glade-previewer.c' || echo '$(srcdir)/'`glade-previewer.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/glade_previewer-glade-previewer.Tpo $(DEPDIR)/glade_previewer-glade-previewer.Po
#	$(AM_V_CC)source='glade-previewer.c' object='glade_previewer-glade-previewer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(glade_previewer_CPPFLAGS) $(CPPFLAGS) $(glade_previewer_CFLAGS) $(CFLAGS) -c -o glade_previewer-glade-previewer.o `test -f 'glade-previewer.c' || echo '$(srcdir)/'`glade-previewer.c

glade_previewer-glade-previewer.obj: glade-previewer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(glade_previewer_CPPFLAGS) $(CPPFLAGS) $(glade_previewer_CFLAGS) $(CFLAGS) -MT glade_previewer-glade-previewer.obj -MD -MP -MF $(DEPDIR)/glade_previewer-glade-previewer.Tpo -c -o glade_previewer-glade-previewer.obj `if test -f 'glade-previewer.c'; then $(CYGPATH_W) 'glade-previewer.c'; else $(CYGPATH_W) '$(srcdir)/glade-previewer.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/glade_previewer-glade-previewer.Tpo $(DEPDIR)/glade_previewer-glade-previewer.Po
#	$(AM_V_CC)source='glade-previewer.c' object='glade_previewer-glade-previewer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(glade_previewer_CPPFLAGS) $(CPPFLAGS) $(glade_previewer_CFLAGS) $(CFLAGS) -c -o glade_previewer-glade-previewer.obj `if test -f 'glade-previewer.c'; then $(CYGPATH_W) 'glade-previewer.c'; else $(CYGPATH_W) '$(srcdir)/glade-previewer.c'; fi`

glade_previewer-glade-preview-window.o: glade-preview-window.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(glade_previewer_CPPFLAGS) $(CPPFLAGS) $(glade_previewer_CFLAGS) $(CFLAGS) -MT glade_previewer-glade-preview-window.o -MD -MP -MF $(DEPDIR)/glade_previewer-glade-preview-window.Tpo -c -o glade_previewer-glade-preview-window.o `test -f 'glade-preview-window.c' || echo '$(srcdir)/'`glade-preview-window.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/glade_previewer-glade-preview-window.Tpo $(DEPDIR)/glade_previewer-glade-preview-window.Po
#	$(AM_V_CC)source='glade-preview-window.c' object='glade_previewer-glade-preview-window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(glade_previewer_CPPFLAGS) $(CPPFLAGS) $(glade_previewer_CFLAGS) $(CFLAGS) -c -o glade_previewer-glade-preview-window.o `test -f 'glade-preview-window.c' || echo '$(srcdir)/'`glade-preview-window.c

glade_previewer-glade-preview-window.obj: glade-preview-window.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(glade_previewer_CPPFLAGS) $(CPPFLAGS) $(glade_previewer_CFLAGS) $(CFLAGS) -MT glade_previewer-glade-preview-window.obj -MD -MP -MF $(DEPDIR)/glade_previewer-glade-preview-window.Tpo -c -o glade_previewer-glade-preview-window.obj `if test -f 'glade-preview-window.c'; then $(CYGPATH_W) 'glade-preview-window.c'; else $(CYGPATH_W) '$(srcdir)/glade-preview-window.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/glade_previewer-glade-preview-window.Tpo $(DEPDIR)/glade_previewer-glade-preview-window.Po
#	$(AM_V_CC)source='glade-preview-window.c' object='glade_previewer-glade-preview-window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(glade_previewer_CPPFLAGS) $(CPPFLAGS) $(glade_previewer_CFLAGS) $(CFLAGS) -c -o glade_previewer-glade-preview-window.obj `if test -f 'glade-preview-window.c'; then $(CYGPATH_W) 'glade-preview-window.c'; else $(CYGPATH_W) '$(srcdir)/glade-preview-window.c'; fi`

glade_previewer-glade-preview-template.o: glade-preview-template.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(glade_previewer_CPPFLAGS) $(CPPFLAGS) $(glade_previewer_CFLAGS) $(CFLAGS) -MT glade_previewer-glade-preview-template.o -MD -MP -MF $(DEPDIR)/glade_previewer-glade-preview-template.Tpo -c -o glade_previewer-glade-preview-template.o `test -f 'glade-preview-template.c' || echo '$(srcdir)/'`glade-preview-template.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/glade_previewer-glade-preview-template.Tpo $(DEPDIR)/glade_previewer-glade-preview-template.Po
#	$(AM_V_CC)source='glade-preview-template.c' object='glade_previewer-glade-preview-template.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(glade_previewer_CPPFLAGS) $(CPPFLAGS) $(glade_previewer_CFLAGS) $(CFLAGS) -c -o glade_previewer-glade-preview-template.o `test -f 'glade-preview-template.c' || echo '$(srcdir)/'`glade-preview-template.c

glade_previewer-glade-preview-template.obj: glade-preview-template.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(glade_previewer_CPPFLAGS) $(CPPFLAGS) $(glade_previewer_CFLAGS) $(CFLAGS) -MT glade_previewer-glade-preview-template.obj -MD -MP -MF $(DEPDIR)/glade_previewer-glade-preview-template.Tpo -c -o glade_previewer-glade-preview-template.obj `if test -f 'glade-preview-template.c'; then $(CYGPATH_W) 'glade-preview-template.c'; else $(CYGPATH_W) '$(srcdir)/glade-preview-template.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/glade_previewer-glade-preview-template.Tpo $(DEPDIR)/glade_previewer-glade-preview-template.Po
#	$(AM_V_CC)source='glade-preview-template.c' object='glade_previewer-glade-preview-template.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(glade_previewer_CPPFLAGS) $(CPPFLAGS) $(glade_previewer_CFLAGS) $(CFLAGS) -c -o glade_previewer-glade-preview-template.obj `if test -f 'glade-preview-template.c'; then $(CYGPATH_W) 'glade-preview-template.c'; else $(CYGPATH_W) '$(srcdir)/glade-preview-template.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-girDATA: $(gir_DATA)
	@$(NORMAL_INSTALL)
	@list='$(gir_DATA)'; test -n "$(girdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(girdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(girdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(girdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(girdir)" || exit $$?; \
	done

uninstall-girDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(gir_DATA)'; test -n "$(girdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(girdir)'; $(am__uninstall_files_from_dir)
install-typelibDATA: $(typelib_DATA)
	@$(NORMAL_INSTALL)
	@list='$(typelib_DATA)'; test -n "$(typelibdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(typelibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(typelibdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(typelibdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(typelibdir)" || exit $$?; \
	done

uninstall-typelibDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(typelib_DATA)'; test -n "$(typelibdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(typelibdir)'; $(am__uninstall_files_from_dir)
install-libgladeuiincludeHEADERS: $(libgladeuiinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(libgladeuiinclude_HEADERS)'; test -n "$(libgladeuiincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libgladeuiincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libgladeuiincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libgladeuiincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libgladeuiincludedir)" || exit $$?; \
	done

uninstall-libgladeuiincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libgladeuiinclude_HEADERS)'; test -n "$(libgladeuiincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libgladeuiincludedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(girdir)" "$(DESTDIR)$(typelibdir)" "$(DESTDIR)$(libgladeuiincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-girDATA install-libgladeuiincludeHEADERS \
	install-typelibDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-girDATA \
	uninstall-libLTLIBRARIES uninstall-libgladeuiincludeHEADERS \
	uninstall-typelibDATA

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-girDATA install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-libgladeuiincludeHEADERS install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	install-typelibDATA installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-girDATA \
	uninstall-libLTLIBRARIES uninstall-libgladeuiincludeHEADERS \
	uninstall-typelibDATA

.PRECIOUS: Makefile


%.h: %.gresource.xml
	$(GLIB_COMPILE_RESOURCES) --manual-register --generate $< --target=$@
%.c: %.gresource.xml
	$(GLIB_COMPILE_RESOURCES) --manual-register --generate $< --target=$@

# rule for static resources
%.h: %.static.gresource.xml
	$(GLIB_COMPILE_RESOURCES) --generate $< --target=$@
%.c: %.static.gresource.xml
	$(GLIB_COMPILE_RESOURCES) --generate $< --target=$@

glade-win32-res.o: glade-previewer.rc
	$(WINDRES) $< $@

gladeui-win32-res.o: gladeui.rc
	$(WINDRES) $< $@

#
# Marshaller generation
#
glade-marshallers.h: glade-marshallers.list $(GLIB_GENMARSHAL)
	$(GLIB_GENMARSHAL) --prefix=_glade_marshal $(srcdir)/glade-marshallers.list --header > glade-marshallers-h.tmp \
	&& mv glade-marshallers-h.tmp glade-marshallers.h \
	|| ( rm -f glade-marshallers-h.tmp && exit 1)
glade-marshallers.c: glade-marshallers.list $(GLIB_GENMARSHAL)
	$(GLIB_GENMARSHAL) --prefix=_glade_marshal $(srcdir)/glade-marshallers.list --body --header > glade-marshallers-c.tmp     \
	&& mv glade-marshallers-c.tmp glade-marshallers.c \
	|| ( rm -f glade-marshallers-c.tmp && exit 1 )

#
# Enum type generation
#
gladeui-enum-types.h: gladeui-enum-types.h.template $(libgladeuiinclude_HEADERS) $(GLIB_MKENUMS)
	$(AM_V_GEN) (cd $(srcdir) && $(GLIB_MKENUMS) --template $@.template \
	$(libgladeuiinclude_HEADERS)) > $@

gladeui-enum-types.c: gladeui-enum-types.c.template $(libgladeuiinclude_HEADERS) $(GLIB_MKENUMS)
	$(AM_V_GEN) (cd $(srcdir) && $(GLIB_MKENUMS) --template $@.template \
	$(libgladeuiinclude_HEADERS)) > $@

#
# Introspection generation
#

-include $(INTROSPECTION_MAKEFILE)

Gladeui-2.0.gir: libgladeui-2.la

# Generate resources
gladeui-resources.h: gladeui-resources.gresource.xml $(UI_FILES) $(GRAPHICS_FILES)
	$(AM_V_GEN) $(GLIB_COMPILE_RESOURCES) $(srcdir)/gladeui-resources.gresource.xml \
		--target=$@ --sourcedir=$(srcdir) --c-name _gladeui --generate-header
gladeui-resources.c: gladeui-resources.gresource.xml $(UI_FILES) $(GRAPHICS_FILES)
	$(AM_V_GEN) $(GLIB_COMPILE_RESOURCES) $(srcdir)/gladeui-resources.gresource.xml \
		--target=$@ --sourcedir=$(srcdir) --c-name _gladeui --generate-source

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
